题目描述
给定一个数组A[0,1,...,n-1],请构建一个数组B[0,1,...,n-1],其中B中的元素B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]。不能使用除法。


# -*- coding:utf-8 -*-
class Solution:
    def multiply(self, A):
        # write code here
        #B[i]=A[0]*...*A[n-1]/A[i],由于不让使用除法，则可以将乘式拆分为2个部分，A[i]前面的部分和A[i]后面的部分
        #假设C[i]代表前一半，D[i]代表后一半，B[i]=C[i]*D[i],C[i]=A[0]*A[i-1]
        n = len(A)
        B = [1]*n
        C = [1]*n
        D = [1]*n
        C[0] = A[0]
        for i in range(1,n):
            C[i] = C[i - 1] * A[i - 1]
        for i in range(n-1)[::-1]:
            D[i] = D[i + 1] * A[i + 1]
        for i in range(n):
            B[i] = C[i] * D[i]
        return B
