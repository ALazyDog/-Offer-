题目描述
给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。


# -*- coding:utf-8 -*-
# class TreeLinkNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#         self.next = None
class Solution:
    def GetNext(self, pNode):
        # write code here
        '''
        三种情况：
        1.若该节点有右子树，则为右子树最左节点
        2.若该节点为其父节点的左节点，则下一个节点为其父节点
        3.若该节点为其父节点的右节点，则找一个节点为该节点父节点左节点的节点
        '''
        if not pNode:
            return None
        elif pNode.right:
            pNode=pNode.right
            while pNode!=None and pNode.left:
                pNode=pNode.left
            return pNode
        elif pNode.next!=None and pNode==pNode.next.right:
            pNode=pNode.next
            while pNode.next!=None and pNode!=pNode.next.left:
                pNode=pNode.next
            return pNode.next
        else:
            return pNode.next
